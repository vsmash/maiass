name: Build and Release

# Trigger only on pushes to main branch
# Uses latest git tag as version basis and creates release with 'v' prefix

permissions:
  contents: write  # Required to create releases
  actions: read

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Keep manual trigger as backup
    inputs:
      version:
        description: 'Version to release (e.g., 0.7.2)'
        required: true
        default: '0.7.2'

jobs:
  build:
    name: Build Cross-Platform Binaries
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build all platforms
      run: npm run build:all
      
    - name: Code sign macOS binaries (if available)
      run: |
        if [[ "$RUNNER_OS" == "macOS" ]]; then
          echo "üîê Code signing macOS binaries..."
          if ./scripts/codesign.sh; then
            echo "‚úÖ macOS code signing completed"
          else
            echo "‚ö†Ô∏è macOS code signing failed, continuing with unsigned binaries"
          fi
        else
          echo "‚ö†Ô∏è Not on macOS runner - skipping code signing"
        fi
      
    - name: Create release assets with archives
      run: |
        mkdir -p release-assets
        cd release-assets
        
        # Copy binaries with proper naming
        cp ../build/maiass-macos-x64 maiass-macos-x64
        cp ../build/maiass-macos-arm64 maiass-macos-arm64
        cp ../build/maiass-linux-x64 maiass-linux-x64
        cp ../build/maiass-linux-arm64 maiass-linux-arm64
        cp ../build/maiass-win-x64.exe maiass-windows-x64.exe
        cp ../build/maiass-win-arm64.exe maiass-windows-arm64.exe
        
        # Make binaries executable
        chmod +x maiass-*
        
        # Create archives that preserve signatures
        echo "üì¶ Creating signature-preserving archives..."
        
        # macOS archives using ditto (preserves extended attributes/signatures)
        if command -v ditto >/dev/null 2>&1; then
          ditto -c -k --sequesterRsrc --keepParent maiass-macos-x64 maiass-macos-x64.zip
          ditto -c -k --sequesterRsrc --keepParent maiass-macos-arm64 maiass-macos-arm64.zip
          echo "‚úÖ Created macOS archives with ditto"
        else
          # Fallback to zip on non-macOS runners
          zip -9 maiass-macos-x64.zip maiass-macos-x64
          zip -9 maiass-macos-arm64.zip maiass-macos-arm64
          echo "‚ö†Ô∏è Created macOS archives with zip (signatures may not be preserved)"
        fi
        
        # Linux archives
        tar -czf maiass-linux-x64.tar.gz maiass-linux-x64
        tar -czf maiass-linux-arm64.tar.gz maiass-linux-arm64
        
        # Windows archives
        zip -9 maiass-windows-x64.zip maiass-windows-x64.exe
        zip -9 maiass-windows-arm64.zip maiass-windows-arm64.exe
        
        # Create checksums for archives
        shasum -a 256 *.zip *.tar.gz > checksums.txt
        
        # List created files
        echo "üìã Created release files:"
        ls -la *.zip *.tar.gz checksums.txt
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-binaries
        path: release-assets/
        retention-days: 30

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history and tags
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: release-binaries
        path: release-assets/
        
    - name: Get version from latest git tag
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          echo "tag_name=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          # Main branch push - get latest git tag as version
          echo "Available tags:"
          git tag --list --sort=-version:refname | head -10
          
          LATEST_TAG=$(git tag --list --sort=-version:refname | head -1)
          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="0.0.0"
            echo "No tags found, using default: $LATEST_TAG"
          else
            echo "Found latest tag: $LATEST_TAG"
          fi
          
          echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "tag_name=$LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Using latest git tag as version: $LATEST_TAG"
        fi
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.tag_name }}
        name: "maiass ${{ steps.version.outputs.version }} - Cross-Platform Release"
        body: |
          üéâ **Cross-platform release of maiass with proper code signing!**
          
          AI-powered Git workflow automation tool now available for macOS, Linux, and Windows with self-contained binaries (no Node.js installation required).
          
          ## ÔøΩ Code Signing
          - ‚úÖ **macOS binaries are properly signed** with Apple Developer ID
          - ‚úÖ **Signatures preserved** through archive distribution
          - ‚úÖ **No more "killed" processes** on macOS
          
          ## üöÄ Quick Install
          
          ### Homebrew (Recommended for macOS/Linux)
          ```bash
          brew install vsmash/maiass/maiass
          ```
          
          ### Universal Installer
          ```bash
          curl -fsSL https://raw.githubusercontent.com/vsmash/maiass/main/scripts/install.sh | bash
          ```
          
          ## üì¶ Manual Download
          
          Choose your platform and download the archive:
          
          ### macOS
          - **Apple Silicon (M1/M2/M3):** [maiass-macos-arm64.zip](https://github.com/vsmash/maiass/releases/download/${{ steps.version.outputs.tag_name }}/maiass-macos-arm64.zip)
          - **Intel:** [maiass-macos-x64.zip](https://github.com/vsmash/maiass/releases/download/${{ steps.version.outputs.tag_name }}/maiass-macos-x64.zip)
          
          ### Linux
          - **x64:** [maiass-linux-x64.tar.gz](https://github.com/vsmash/maiass/releases/download/${{ steps.version.outputs.tag_name }}/maiass-linux-x64.tar.gz)
          - **ARM64:** [maiass-linux-arm64.tar.gz](https://github.com/vsmash/maiass/releases/download/${{ steps.version.outputs.tag_name }}/maiass-linux-arm64.tar.gz)
          
          ### Windows
          - **x64:** [maiass-windows-x64.zip](https://github.com/vsmash/maiass/releases/download/${{ steps.version.outputs.tag_name }}/maiass-windows-x64.zip)
          - **ARM64:** [maiass-windows-arm64.zip](https://github.com/vsmash/maiass/releases/download/${{ steps.version.outputs.tag_name }}/maiass-windows-arm64.zip)
          
          ## ‚ú® What's New
          
          - ‚úÖ **Proper code signing** for macOS binaries (Apple Developer ID)
          - ‚úÖ **Archive distribution** preserves signatures through GitHub releases
          - ‚úÖ **Cross-platform binaries** for macOS, Linux, Windows
          - ‚úÖ **Self-contained** - includes Node.js runtime (no installation required)
          - ‚úÖ **Homebrew support** with signature-preserving distribution
          - ‚úÖ **ARM64 support** for Apple Silicon Macs and ARM64 Linux/Windows
          
          ## üîê Verification
          
          All archives include SHA256 checksums for verification:
          - **Checksums:** [checksums.txt](https://github.com/vsmash/maiass/releases/download/${{ steps.version.outputs.tag_name }}/checksums.txt)
          
          ## üìã Installation Instructions
          
          ### macOS/Linux:
          ```bash
          # Download and extract
          curl -L -o maiass.zip <download-url>
          unzip maiass.zip
          chmod +x maiass-*
          sudo mv maiass-* /usr/local/bin/maiass
          ```
          
          ### Windows:
          ```powershell
          # Download and extract to desired location
          # Add to PATH environment variable
          ```
          
          ## üìù Important Notes
          
          - **Download the archives** (.zip/.tar.gz) not individual binaries
          - **macOS users:** Archives preserve code signatures for seamless execution
          - **Homebrew users:** Will automatically get properly signed binaries
          - **Source code archives below** are for development only
        files: |
          release-assets/maiass-macos-x64.zip
          release-assets/maiass-macos-arm64.zip
          release-assets/maiass-linux-x64.tar.gz
          release-assets/maiass-linux-arm64.tar.gz
          release-assets/maiass-windows-x64.zip
          release-assets/maiass-windows-arm64.zip
          release-assets/checksums.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
